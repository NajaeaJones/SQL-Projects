SELECT * 
FROM BIT_DB.customers
WHERE length(order_id)=6
AND order_id<>'Order ID';

-- How many many unique orders were placed in January? In other words, how many distinct order ids do we have? --
SELECT COUNT(distinct orderid)
    FROM BIT_DB.JanSales
    WHERE length(orderid)=6
    AND orderid<>'Order ID';
    
-- How many of those orders were for an iPhone?
SELECT COUNT(distinct orderid)
    FROM BIT_DB.JanSales
    WHERE Product='iPhone'
    AND length(orderid)=6
    AND orderid<>'Order ID';
    
-- Select the customer account numbers for all the orders that were placed in February.
SELECT distinct acctnum
    FROM BIT_DB.CUSTOMERS CUST
    JOIN BIT_DB.FEBSALES Feb
    ON CUST.ORDER_ID=FEB.ORDERID
    WHERE LENGTH(ORDERID)=6
    AND ORDERID<>'ORDER ID';

-- Which product was the cheapest one sold in January, and what was the price?
SELECT product AS lowest_costing_product, min(price) 
    FROM BIT_DB.JanSales Jan
    GROUP BY Product, price
    ORDER BY price ASC
    Limit 1;
    
-- What is the total revenue for each product sold in January?
SELECT product, SUM(price) AS revenue
    FROM BIT_DB.JanSales
    GROUP BY product, price
    ORDER BY price ASC
    Limit 1;
    
-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, 
--how many of each were sold, and what was the total revenue?
    
SELECT product, SUM(quantity)*price AS revenue
    FROM BIT_DB.FebSales
    WHERE location='548 Lincoln St, Seattle, WA 98101'
    GROUP BY product;
    
-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?--
SELECT COUNT(DISTINCT cust.acctnum), AVG(quantity*price)
    FROM BIT_DB.FEBSALES FEB
    LEFT JOIN BIT_DB.CUSTOMERS CUST
    ON FEB.ORDERID=CUST.ORDER_ID
    WHERE FEB.QUANTITY>2
    AND LENGTH(ORDERID)=6
    AND ORDERID<>'ORDER ID';


-- List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT PRODUCT, SUM(QUANTITY)       
    FROM BIT_DB.FEBSALES FEB
    WHERE LOCATION LIKE '%LOS ANGELES%'
    GROUP BY PRODUCT;

SELECT * 
FROM BIT_DB.customers
WHERE length(order_id)=6
AND order_id<>'Order ID';

-- How many many unique orders were placed in January? In other words, how many distinct order ids do we have? --
SELECT COUNT(distinct orderid)
    FROM BIT_DB.JanSales
    WHERE length(orderid)=6
    AND orderid<>'Order ID';
    
-- How many of those orders were for an iPhone?
SELECT COUNT(distinct orderid)
    FROM BIT_DB.JanSales
    WHERE Product='iPhone'
    AND length(orderid)=6
    AND orderid<>'Order ID';
    
-- Select the customer account numbers for all the orders that were placed in February.
SELECT distinct acctnum
    FROM BIT_DB.CUSTOMERS CUST
    JOIN BIT_DB.FEBSALES Feb
    ON CUST.ORDER_ID=FEB.ORDERID
    WHERE LENGTH(ORDERID)=6
    AND ORDERID<>'ORDER ID';

-- Which product was the cheapest one sold in January, and what was the price?
SELECT product AS lowest_costing_product, min(price) 
    FROM BIT_DB.JanSales Jan
    GROUP BY Product, price
    ORDER BY price ASC
    Limit 1;
    
-- What is the total revenue for each product sold in January?
SELECT product, SUM(price) AS revenue
    FROM BIT_DB.JanSales
    GROUP BY product, price
    ORDER BY price ASC
    Limit 1;
    
-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, 
--how many of each were sold, and what was the total revenue?
    
SELECT product, SUM(quantity)*price AS revenue
    FROM BIT_DB.FebSales
    WHERE location='548 Lincoln St, Seattle, WA 98101'
    GROUP BY product;
    
-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?--
SELECT COUNT(DISTINCT cust.acctnum), AVG(quantity*price)
    FROM BIT_DB.FEBSALES FEB
    LEFT JOIN BIT_DB.CUSTOMERS CUST
    ON FEB.ORDERID=CUST.ORDER_ID
    WHERE FEB.QUANTITY>2
    AND LENGTH(ORDERID)=6
    AND ORDERID<>'ORDER ID';
    
-- List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT PRODUCT, SUM(QUANTITY)       
    FROM BIT_DB.FEBSALES FEB
    WHERE LOCATION LIKE '%LOS ANGELES%'
    GROUP BY PRODUCT;
    
SELECT orderdate
    FROM BIT_DB.FebSales
    WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';
    
SELECT location
    FROM BIT_DB.FebSales 
    WHERE orderdate = '02/18/19 01:35';

SELECT sum(quantity)
    FROM BIT_DB.FebSales 
    WHERE orderdate like '02/18/19%';

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?

SELECT distinct location, count(orderID)
    FROM BIT_DB.JanSales
    WHERE location LIKE '%NY%'
    and length(orderid)=6
    AND orderid<>'Order ID'
    GROUP BY location
    HAVING count(orderID)>2;
    
--How many of each type of headphone were sold in February?
SELECT sum(Quantity) as quantity, Product
    FROM BIT_DB.FebSales
    WHERE Product like '%Headphones%'
    GROUP BY Product;
    
-- What was the average amount spent per account in February? (Hints: For this question, we want the average amount spent / number of accounts, 
-- not the amount spent by each account. To multiply, you can use the * symbol, and to divide, you can use the / symbol.)

SELECT avg(quantity*price)
    FROM BIT_DB.FebSales Feb

    LEFT JOIN BIT_DB.customers cust
    ON FEB.orderid=cust.order_id

    WHERE length(orderid) = 6 
    AND orderid <> 'Order ID';

-- What was the average quantity of products purchased per account in February? (Hint: just like question 3,
--we want the overall average, not the average for each account individually).

SELECT sum(quantity)/count(cust.acctnum)
   FROM BIT_DB.Febsales Feb
    
    LEFT JOIN BIT_DB.customers cust
    ON FEB.ORDERID=CUST.ORDER_ID
    
    WHERE LENGTH(ORDERID) = 6
    AND ORDERID <> 'ORDER ID';
    
-- Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT product,sum(quantity*price)
    FROM BIT_DB.JanSales
    GROUP BY product
    ORDER BY sum(quantity*price)desc
    LIMIT 1;



